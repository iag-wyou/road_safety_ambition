,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='incident_month',y='avg_claim_size count',title='avg_claim_size')
yom_dat<-clmdat_num[latest_adjustment_method_name=="Total Loss" & !is.na(sum_insured_amount)] %>%
.[,":="(vehicle_age=incident_year-year_of_manufacture)] %>%
.[incident_year != 2017] %>%
.[,.(total_cost=sum(incurred_net_gross_gross)
,total_cost_per_si=sum(incurred_net_gross_gross)/sum(sum_insured_amount)
,total_si=sum(sum_insured_amount)
,avg_claim_size=mean(incurred_net_gross_gross)
,avg_claim_size_per_si=(sum(incurred_net_gross_gross)/.N)/sum(sum_insured_amount)
,freq=.N)
,by=.(vehicle_age,incident_year)]
ggplotly(
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=total_cost, group=as.factor(incident_year),color=as.factor(incident_year))
,alpha=1,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='vehicle age',y='total cost',title='total cost',color="incident year")
)
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=freq, group=as.factor(incident_year),color=as.factor(incident_year)),stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='incident_month',y='claim count',title='claim counts',color="incident year")
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=avg_claim_size, group=as.factor(incident_year),color=as.factor(incident_year))
,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='incident_month',y='avg_claim_size count',title='avg_claim_size')
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=total_cost, group=as.factor(incident_year),color=as.factor(incident_year))
,alpha=1,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='vehicle age',y='total cost',title='total cost',color="incident year")
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=avg_claim_size, group=as.factor(incident_year),color=as.factor(incident_year))
,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='vehicle age',y='avg_claim_size count',title='avg_claim_size')
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=avg_claim_size, group=as.factor(incident_year),color=as.factor(incident_year))
,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='vehicle age',y='avg_claim_size count',title='avg_claim_size',color='incident year')
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=avg_claim_size, group=as.factor(incident_year),color=as.factor(incident_year))
,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='vehicle age',y='avg_claim_size',title='avg_claim_size',color='incident year')
ggplot(data=yom_dat)+
geom_line(aes(x=vehicle_age,y=avg_claim_size, group=as.factor(incident_year),color=as.factor(incident_year))
,stat='identity')+
scale_color_brewer(palette="Set1")+
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
scale_x_continuous(breaks=c(seq(0,10,by=1),seq(15,30,by=5)),limits=c(0,30))+
labs(x='vehicle age',y='avg_claim_size',title='avg_claim_size',color='incident year')
# library --------------------------------------------------------------------------------------------
source("lib/op19_functions.r")
# library --------------------------------------------------------------------------------------------
setwd("D:/ia_dev/cla-op19-clmtrans")
source("lib/op19_functions.r")
library("tm")
library("SnowballC")
library("wordcloud")
library("gridExtra")
library("plotly")
clmdat[,.N,by=c(claim_resolution_name,closed_outcome_id)]
clmdat[,.N,by=.(claim_resolution_name,closed_outcome_id)]
# Get the data
source("D:/ia_dev/cla-op19-clmtrans/lib/op19_functions.r")
# Read in the claims data
clmdat <- fEDHsql("EDH_PROD_GP",
"SELECT * FROM dl_analytics.op19_claims
where incurred_net_gross_gross >0 and claim_loss_date >='2014-01-1'
and (claim_resolution_name = 'Completed' or claim_resolution_name is NULL)
and (closed_outcome_id = 10002 or closed_outcome_id is NULL)
and exposure_primary_coverage_name = 'Comprehensive (Car)'
and claim_number != 'NRM140425910'
")
expdat <- fEDHsql("EDH_PROD_GP",
"SELECT * FROM dl_analytics.op19_claims
where incurred_net_gross_gross >0 and claim_loss_date >='2014-01-1'
and (claim_resolution_name = 'Completed' or claim_resolution_name is NULL)
and exposure_primary_coverage_name = 'Comprehensive (Car)'
and claim_number != 'NRM140425910'
")
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month), y=freq,color=total_cost,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='count',title='Claim counts')
sev_data<-exp_plot_data[,.(total_cost=sum(incurred_net_gross_gross),freq=.N,avg_cost=mean(payment_net_gross_gross))
,by=.(claim_fault_rating_name,incident_vehicle_loss_party_name,incident_month,highest_severity_name)]
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month), y=freq,color=total_cost,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='count',title='Claim counts')
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month), y=freq,color=highest_severity_name,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='count',title='Claim counts')
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month), y=freq,color=total_cost,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='count',title='Claim counts')
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month), y=freq,color=highest_severity_name,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='count',title='Claim counts')
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month),y=total_cost
,color=highest_severity_name,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='total cost',title='Total Cost')
ggplot(data=sev_data[!is.na(claim_fault_rating_name)])+
geom_line(aes(x=as.character(incident_month), y=freq,color=highest_severity_name,group=highest_severity_name),stat='identity')+
# geom_label(data=sev_inflation,aes(x=NULL,y=inflation,group=highest_severity_name))
theme(legend.position='bottom',axis.text.x = element_text(angle =90,hjust=1))+
facet_grid(claim_fault_rating_name~incident_vehicle_loss_party_name)+
labs(x='accident month',y='count',title='Claim counts')
clmdat_num[is.na(sum_insured_amount)] %>% nrow
clmdat_num[incurred_net_gross_gross >= (sum_insured_amount)]
clmdat_num[incurred_net_gross_gross >= (sum_insured_amount)] %>% nrow
clmdat_num[latest_adjustment_method_name=="Total Loss" & incurred_net_gross_gross >= (sum_insured_amount)] %>% nrow
clmdat_num[latest_adjustment_method_name=="Total Loss" & incurred_net_gross_gross > (sum_insured_amount)] %>% nrow
clmdat_num[latest_adjustment_method_name=="Total Loss" & incurred_net_gross_gross > (sum_insured_amount)] %>% head
clmdat$car_sequence_number
install.packages(data.table)
install.packages("data.table")
library(data.table)
library(scales)
install.packages("scales")
ggplot()+geom_point(aes(x=1,y=1))+scale_x_continuous(labels=percent)
library(lubridate)
library(magrittr)
library(dplyr)
library(data.table)
library(foreach)
library(ggplot2)
library(plotly)
library(DT)
library(fst)
library(doParallel)
library(Matrix)
library(xgboost)
library(scales)
ggplot()+geom_point(aes(x=1,y=1))+scale_x_continuous(labels=percent)
setwd("D:/ia_dev/cla-op19-clmtrans")
source("07_glm_refresh/99.functions.r")
start<-Sys.time()
### read in data
numvar_sum<-read.fst('T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/num_dict.fst',as.data.table = TRUE)
cvar_sum<-read.fst('T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/char_dict.fst',as.data.table = TRUE)
id_response<-read.fst('T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/id_response.fst',as.data.table = TRUE)
model_dat<-read.fst('T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/model_data.fst',as.data.table = TRUE)
model_dat2<-model.matrix(~.,model_dat)
### convert to sparse and split up training and test data
dtrain_x<-xgb.DMatrix(model_dat2[id_response$type == 'tr',]
,label=id_response[type=='tr']$total_cost_inc_excess_exc_gst_amount)
dtrain_y<-id_response[type=='tr']$total_cost_inc_excess_exc_gst_amount
dtest_x<-xgb.DMatrix(model_dat2[id_response$type == 'te',]
,label=id_response[type=='te']$total_cost_inc_excess_exc_gst_amount)
dtest_y<-id_response[type=='te']$total_cost_inc_excess_exc_gst_amount
watchlist<-list(train=dtrain_x,test=dtest_x)
paramlist<-as.data.table(expand.grid(
max_depth=c(2,3,4)
,eta=c(0.1,0.01)
))
set.seed(1)
# searchgrid<-apply(paramlist,1, function(x){
#   fit_cv<-xgb.cv(data=dtrain_x
#                   ,eta=x[['eta']]
#                   ,max_depth=x[['max_depth']]
#                   ,watchlist=watchlist
#                   ,nrounds=1000
#                   ,nfold=3
#                   ,nthread=-1
#                   ,objective="reg:gamma"
#                   ,eval_metric ="rmse"
#                   ,early_stopping_round = 5
#                   ,verbose=0)
#   # xvalidationScores <- as.data.frame(fit_cv)
#   #Save rmse of the last iteration
#   rmse <- fit_cv$evaluation_log$test_rmse_mean %>% min
#
#   return(c(rmse, x[['eta']], x[['max_depth']]))
# })
#
# searchgrid<-as.data.table(t(searchgrid))
# names(searchgrid)<-c('rmse','eta','max_depth')
results<-data.table()
### grid search for best parameters
for (i in 1:nrow(paramlist)){
fit_xgb<-xgb.train(data=dtrain_x
,eta=paramlist[i]$eta
,max_depth=paramlist[i]$max_depth
,watchlist=watchlist
,nrounds=5000
,nthread=32
,objective="reg:gamma"
,eval_metric ="rmse"
,early_stopping_round = 5
,verbose=0)
temp_<-data.table(as.data.table(fit_xgb$params)
,best_iter=fit_xgb$best_iteration
,best_ntreelimit=fit_xgb$best_ntreelimit
,best_score=fit_xgb$best_score)
temp_[,mod_name:=sub(":","_",
paste("mod",eta,max_depth,nthread
,objective,eval_metric,silent,best_iter
,best_ntreelimit,best_score,".xgb",sep="_"))]
results %<>% rbind(temp_)
xgb.save(fit_xgb,paste0("T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/",temp_$mod_name))
}
### write out grid search results
write.fst(results,"T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/results.fst")
### import best model from grid search results
best_mod<-xgb.load(paste0("T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/"
,results[best_score==min(best_score)]$mod_name))
### predict for validation
pred=predict(best_mod,dtest_x)
### output validation and variable importance
## validation
mse=sum((dtest_y-pred)**2)/length(dtest_y)
v_xgb<-fvalidation(actual=dtest_y,predict=pred)
v_xgb[1]
ggsave('T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/model_validation.png',v_xgb[[1]],width = 12,height=10)
v_xgb[2]
# distribution of differences between actual and expected
v_xgb[3]
# cumulative distribution of difference between actual and expected
v_xgb[4]
write_fst(v_xgb[[5]],'T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/cumulative_dist.fst')
## variable importance
importance<-as.data.table(xgb.importance(best_mod,feature_names=names(model_dat)))
importance
write.fst(importance,'T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/importance.fst')
## importance plot
importance_plot<-xgb.ggplot.importance(xgb.importance(best_mod,feature_names=names(model_dat)),top_n=30)
importance_plot
ggsave('T:/Operational/op19_claims_trans_okr/data/07_glm_refresh/xgb_models/importance_plot.png',importance_plot,height=10,width = 12)
end<-Sys.time()
timet<-end-start
timet
install.packages("Ckmeans.1d.dp")
library(feather)
library(magrittr)
library(data.table)
library(dplyr)
dat1<-read_feather('//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/renewal_scenarios_coles_all_factors_2017-12-14d.feather') %>%
as.data.table
dat2<-read_feather('//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/renewal_scenarios_coles_2017-12-14d.feather') %>%
as.data.table
dat<-cbind(dat2,dat1[,!colnames(dat1)[(colnames(dat1) %in% colnames(dat2))],with=F]) %>%
.[, cor_band := cut(p_am_tech / prv_prem, right = TRUE,
breaks = c(-Inf, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, Inf),
labels = c("<60", "61-70", "71-80", "81-90", "91-100", "101-110", "111-120", ">120"))] %>%
# these bands correspond to membership tiers
.[, yor_band := cut(tenure, right = TRUE,
breaks = c(-Inf, 1:4, Inf),
labels = c("1y", "2y", "3y", "4y", "5+y"))] %>%
active<-dat[exposure_start>=as.Date('2018-05-09') & experimentgroup=='ACTIVE_REN'
,.(tech=sum(p_am_tech)
,offered=sum(prem)
,.N),by=exposure_start] %>%
# reduce filesize, retaining some of these might be necessary in the future
.[, tenure := NULL] %>%
.[,COR:=tech/offered] %>%
.[order(exposure_start)]
inactive<-dat[exposure_start>=as.Date('2018-05-09') & experimentgroup=='INACTIVE_REN'
,.(tech=sum(p_am_tech)
,offered=sum(prem)
,.N),by=exposure_start] %>%
# reduce filesize, retaining some of these might be necessary in the future
.[, tenure := NULL] %>%
.[,COR:=tech/offered] %>%
.[order(exposure_start)]
others<-dat[exposure_start>as.Date('2018-03-23') & ! experimentgroup %in% c('INACTIVE_REN','ACTIVE_REN')
,.(tech=sum(p_am_tech)
,offered=sum(prem)
,.N),by=exposure_start] %>%
.[,COR:=tech/offered] %>%
.[order(exposure_start)]
required<-c(
"cdstatk",
"cdtyprdh",
"cor_band",
"dt_pinfr",
"expected_change_in_discounts",
"nm_polh",
"p_am_tech",
"p_ren",
"prem",
"premchg_pc",
"prv_prem",
"scenario",
"yor_band"
)
active<-dat[exposure_start>as.Date('2018-05-01') & experimentgroup=='ACTIVE_REN'] %>% .[,scenario:="ACTIVE_REN"]
active[,required,with=F] %>%
fwrite("//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/active.csv")
inactive<-dat[exposure_start>as.Date('2018-05-01') & experimentgroup=='INACTIVE_REN'] %>% .[,scenario:="INACTIVE_REN"]
inactive[,required,with=F] %>%
fwrite("//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/inactive.csv")
dat<-cbind(dat2,dat1[,!colnames(dat1)[(colnames(dat1) %in% colnames(dat2))],with=F]) %>%
.[, cor_band := cut(p_am_tech / prv_prem, right = TRUE,
breaks = c(-Inf, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, Inf),
labels = c("<60", "61-70", "71-80", "81-90", "91-100", "101-110", "111-120", ">120"))] %>%
# these bands correspond to membership tiers
.[, yor_band := cut(tenure, right = TRUE,
breaks = c(-Inf, 1:4, Inf),
labels = c("1y", "2y", "3y", "4y", "5+y"))]
dat<-cbind(dat2,dat1[,!colnames(dat1)[(colnames(dat1) %in% colnames(dat2))],with=F]) %>%
.[, cor_band := cut(p_am_tech / prv_prem, right = TRUE,
breaks = c(-Inf, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, Inf),
labels = c("<60", "61-70", "71-80", "81-90", "91-100", "101-110", "111-120", ">120"))] %>%
# these bands correspond to membership tiers
.[, yor_band := cut(tenure, right = TRUE,
breaks = c(-Inf, 1:4, Inf),
labels = c("1y", "2y", "3y", "4y", "5+y"))]
active<-dat[exposure_start>=as.Date('2018-05-09') & experimentgroup=='ACTIVE_REN'
,.(tech=sum(p_am_tech)
,offered=sum(prem)
,.N),by=exposure_start] %>%
# reduce filesize, retaining some of these might be necessary in the future
.[, tenure := NULL] %>%
.[,COR:=tech/offered] %>%
.[order(exposure_start)]
inactive<-dat[exposure_start>=as.Date('2018-05-09') & experimentgroup=='INACTIVE_REN'
,.(tech=sum(p_am_tech)
,offered=sum(prem)
,.N),by=exposure_start] %>%
# reduce filesize, retaining some of these might be necessary in the future
.[, tenure := NULL] %>%
.[,COR:=tech/offered] %>%
.[order(exposure_start)]
others<-dat[exposure_start>as.Date('2018-03-23') & ! experimentgroup %in% c('INACTIVE_REN','ACTIVE_REN')
,.(tech=sum(p_am_tech)
,offered=sum(prem)
,.N),by=exposure_start] %>%
.[,COR:=tech/offered] %>%
.[order(exposure_start)]
required<-c(
"cdstatk",
"cdtyprdh",
"cor_band",
"dt_pinfr",
"expected_change_in_discounts",
"nm_polh",
"p_am_tech",
"p_ren",
"prem",
"premchg_pc",
"prv_prem",
"scenario",
"yor_band"
)
active<-dat[exposure_start>as.Date('2018-05-01') & experimentgroup=='ACTIVE_REN'] %>% .[,scenario:="ACTIVE_REN"]
active[,required,with=F] %>%
fwrite("//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/active.csv")
inactive<-dat[exposure_start>as.Date('2018-05-01') & experimentgroup=='INACTIVE_REN'] %>% .[,scenario:="INACTIVE_REN"]
inactive[,required,with=F] %>%
fwrite("//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/inactive.csv")
inactive
active
optim
opt
opt<-fread("N:/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/conv65.csv")
opt
active
opt[nm_polh %in% active$nm_polh]
active
opt %>% merge(active[,.(nm_polh,comp_atp,gwp,exposure_start,p_am_tech,p_ren,prem)],by='nm_polh')
opt
opt[,.(nm_polh,prem)] %>% merge(active[,.(nm_polh,comp_atp,gwp,exposure_start)],by='nm_polh')
opt[,.(nm_polh,prem)]
opt[,.(nm_polh,prem)] %>% merge(active[,.(nm_polh,comp_atp,gwp,exposure_start)],by='nm_polh')
opt_compare<-opt[,.(nm_polh,prem)] %>% merge(active[,.(nm_polh,comp_atp,gwp,exposure_start)],by='nm_polh')
(opt_compare$prem %>% sum) / (opt_compare$comp_atp %>% sum)
opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff]
opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff] %>%
.[order(diff)]
opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff] %>%
.[order(diff)] %>%
.[,N/sum(N)]
opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff] %>%
.[order(diff)] %>%
.[,cum_sum:=N/sum(N)]
opt_compare <- opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff] %>%
.[order(diff)] %>%
.[,cum_sum:=N/sum(N)]
opt_compare
opt_compare
opt_compare <- opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff] %>%
.[order(diff)] %>%
.[,cum_sum:=round(N/sum(N),2)]
opt<-fread("N:/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/conv65.csv")
opt_compare<-opt[,.(nm_polh,prem)] %>% merge(active[,.(nm_polh,comp_atp,gwp,exposure_start)],by='nm_polh')
opt_compare <- opt_compare[,diff:=abs(round(prem/comp_atp-1,2))] %>%
.[,.N,by=diff] %>%
.[order(diff)] %>%
.[,cum_sum:=round(N/sum(N),2)]
opt_compare
opt_compare
dat<-cbind(dat2,dat1[,!colnames(dat1)[(colnames(dat1) %in% colnames(dat2))],with=F]) %>%
.[, cor_band := cut(p_am_tech / prv_prem, right = TRUE,
breaks = c(-Inf, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, Inf),
labels = c("<60", "61-70", "71-80", "81-90", "91-100", "101-110", "111-120", ">120"))] %>%
# these bands correspond to membership tiers
.[, yor_band := cut(tenure, right = TRUE,
breaks = c(-Inf, 1:4, Inf),
labels = c("1y", "2y", "3y", "4y", "5+y"))]
library(feather)
library(magrittr)
library(data.table)
library(dplyr)
library(scales)
library(ggplot2)
dat<-cbind(dat2,dat1[,!colnames(dat1)[(colnames(dat1) %in% colnames(dat2))],with=F]) %>%
.[, cor_band := cut(p_am_tech / prv_prem, right = TRUE,
breaks = c(-Inf, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, Inf),
labels = c("<60", "61-70", "71-80", "81-90", "91-100", "101-110", "111-120", ">120"))] %>%
# these bands correspond to membership tiers
.[, yor_band := cut(tenure, right = TRUE,
breaks = c(-Inf, 1:4, Inf),
labels = c("1y", "2y", "3y", "4y", "5+y"))]
dat1<-read_feather('//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/renewal_scenarios_coles_all_factors_2017-12-14d.feather') %>%
as.data.table
dat2<-read_feather('//rdnrma006/disk_n/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/renewal_scenarios_coles_2017-12-14d.feather') %>%
as.data.table
dat<-cbind(dat2,dat1[,!colnames(dat1)[(colnames(dat1) %in% colnames(dat2))],with=F]) %>%
.[, cor_band := cut(p_am_tech / prv_prem, right = TRUE,
breaks = c(-Inf, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, Inf),
labels = c("<60", "61-70", "71-80", "81-90", "91-100", "101-110", "111-120", ">120"))] %>%
# these bands correspond to membership tiers
.[, yor_band := cut(tenure, right = TRUE,
breaks = c(-Inf, 1:4, Inf),
labels = c("1y", "2y", "3y", "4y", "5+y"))]
active_delta<-dat[exposure_start>as.Date('2018-05-01') & experimentgroup %in% c('INACTIVE_REN','ACTIVE_REN')] %>%
.[,.(experimentgroup,nm_polh,paid,p_ren,.N,diff=round((gwp-prv_gwp)*20/prv_prem)/20)]
active_delta$nm_polh
active_delta[,.(policy_number = nm_polh)] %>% fwrite('N:\IRSDept\IRSUser\DI\Technical Modelling\Projects\2016\20160907_Pricing_Modernisation\renewals\reporting\shiny\generated_scenarios\201803coles\testing\polnum.csv')
active_delta[,.(policy_number = nm_polh)] %>% fwrite('N:/IRSDept/IRSUser/DI/Technical Modelling/Projects/2016/20160907_Pricing_Modernisation/renewals/reporting/shiny/generated_scenarios/201803coles/testing/polnum.csv')
library(data.table)
library(fst)
filtered_dat<-read.fst("U:/galaxydata.fst")
useable<-fread("U:/useable.csv")
filtered_dat[claim_number %in% useable]
filtered_dat
filtered_dat<-read.fst("U:/galaxydata.fst",as.data.table=T)
filtered_dat[claim_number %in% useable]
useable
filtered_dat[claim_number %in% useable$claimno]
filtered_dat[claim_number %in% useable$claimno]$assessment_date
a<-filtered_dat[claim_number %in% useable$claimno]
a$assessment_date
a$assessment_date[1]
library(magrittr)
a$assessment_date[1]  %>% date
a$assessment_date[1]  %>% as.Date()
a[,dt:=as.Date(assessment_date)]
a[,.N,by=dt]
library(lubridate)
a[,dt:=as.Date(assessment_date,format="%Y%m")]
a[,.N,by=dt]
a[,dt:=format(assessment_date,"%Y%m")]
a[,.N,by=dt]
a[,.N,by=dt][order(dt)]
library(data.table)
library(fst)
library(magrittr)
workdir<-"C:/road_safety_ambition/driver experience"
dataloc<-"T:/Analytics/Ad_hoc/20180620_road_safety_ambition_intiatives/driver experience"
setwd(workdir)
fread(paste0(dataloc,policydat.csv))
dataloc<-"T:/Analytics/Ad_hoc/20180620_road_safety_ambition_intiatives/driver experience/"
setwd(workdir)
fread(paste0(dataloc,policydat.csv))
fread(paste0(dataloc,"policydat.csv"))
